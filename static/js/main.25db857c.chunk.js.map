{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","href","className","TodoInfo","todo","cn","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","defaultOption","useState","setTitle","selectedUser","setSelectedUser","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newUser","userName","currentTodo","maxTodoId","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25db857c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      href={`mailto:${user.email}`}\n      className=\"UserInfo\"\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserByID(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserByID(todo.userId),\n  };\n});\n\nfunction getUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nexport const App = () => {\n  const defaultOption = 'Choose a user';\n\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(defaultOption);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmitForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUser !== defaultOption && title !== '') {\n      const newUser = getUserByName(selectedUser);\n\n      setTodos(currentTodo => {\n        const maxTodoId = Math.max(...currentTodo.map(todo => todo.id));\n\n        setTitle('');\n        setSelectedUser(defaultOption);\n\n        return [\n          ...currentTodo,\n          {\n            id: maxTodoId + 1,\n            title,\n            completed: false,\n            userId: newUser ? newUser.id : null,\n            user: newUser,\n          },\n        ];\n      });\n    }\n\n    if (selectedUser === defaultOption) {\n      setUserError(true);\n    }\n\n    if (title === '') {\n      setTitleError(true);\n    }\n  };\n\n  const handleNewTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleNewUser\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setSelectedUser(event.target.value);\n      setUserError(false);\n    };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Add todo form</h1>\n\n        <form\n          className=\"form\"\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmitForm}\n        >\n          <div className=\"form__field\">\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              id=\"title\"\n              placeholder=\"Enter a title\"\n              className=\"form__input\"\n              value={title}\n              onChange={handleNewTitle}\n            />\n            {titleError && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </div>\n\n          <div className=\"form__field\">\n            <select\n              data-cy=\"userSelect\"\n              name=\"userSelect\"\n              id=\"userSelect\"\n              className=\"form__input\"\n              value={selectedUser}\n              onChange={handleNewUser}\n            >\n              <option value={defaultOption} disabled>\n                {defaultOption}\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n\n          <button\n            className=\"form__button\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}